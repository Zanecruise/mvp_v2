name: FoundLab Backend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install poetry==1.8.2

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run Ruff Linter
        run: poetry run ruff check .

      - name: Run PyTest with Coverage
        run: poetry run pytest --cov=app --cov-report=xml tests/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud Registry (GCR)
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Configure Docker to authenticate to GCR
        if: github.ref == 'refs/heads/main'
        run: gcloud auth configure-docker

      - name: Build and Push Docker image to GCR
        if: github.ref == 'refs/heads/main'
        env:
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          IMAGE_NAME: foundlab-backend
          IMAGE_TAG: ${{ github.sha }}
          LATEST_IMAGE_TAG: foundlab-backend:latest
        run: |
          docker build -t gcr.io/$GCP_PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG .
          docker push gcr.io/$GCP_PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG

          docker tag gcr.io/$GCP_PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG gcr.io/$GCP_PROJECT_ID/$LATEST_IMAGE_TAG
          docker push gcr.io/$GCP_PROJECT_ID/$LATEST_IMAGE_TAG
