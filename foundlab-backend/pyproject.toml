[tool.poetry]
name = "foundlab-backend"
version = "0.1.0"
description = "Backend para a infraestrutura de reputação digital FoundLab"
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
motor = "^3.3.2"
pydantic = {extras = ["email"], version = "^2.7.1"}
pydantic-settings = "^2.2.1"
pymongo = "^4.7.2"
python-dotenv = "^1.0.1"
dnspython = "^2.6.1"
pydantic-extra-types = "^2.7.0" # Adicionado para exemplos Pydantic/Swagger

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
httpx = "^0.27.0"
faker = "^25.0.0"
ruff = "^0.4.3"
moto = {extras = ["server"], version = "^5.0.0"}
pymongo-inmemory = "^0.0.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "PLE", # pylint errors
    "PLW", # pylint warnings
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
]
ignore = [
    "E501", # Line too long, handled by ruff formatter
    "C901", # Too complex (will refactor if needed)
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"] # Allow unused imports in __init__.py to export modules

[tool.pytest.ini_options]
addopts = "--cov=app --cov-report=term-missing --cov-fail-under=90"
async_fixtures = true
